/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "PriceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "Fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620012ab380380620012ab833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611125620001866000396000818161036c015281816105bb0152818161060b015261080101526111256000f3fe60806040526004361061007f5760003560e01c80636ce1417e1161004e5780636ce1417e14610147578063893d20e8146101515780639e87a5cd1461017c578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab3565b6102da565b6040516100cc9190610af9565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b40565b610323565b6040516101099190610b7c565b60405180910390f35b61011a61036a565b005b34801561012857600080fd5b506101316105aa565b60405161013e9190610af9565b60405180910390f35b61014f6101b1565b005b34801561015d57600080fd5b506101666105b7565b6040516101739190610b7c565b60405180910390f35b34801561018857600080fd5b506101916105df565b60405161019e9190610bf6565b60405180910390f35b6101af610609565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cd90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c6e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061033857610337610c8e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ef576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049a57600080828154811061041457610413610c8e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049290610cec565b9150506103f2565b50600067ffffffffffffffff8111156104b6576104b5610d35565b5b6040519080825280602002602001820160405280156104e45781602001602082028036833780820191505090505b50600090805190602001906104fa9291906109a9565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052190610d95565b60006040518083038185875af1925050503d806000811461055e576040519150601f19603f3d011682016040523d82523d6000602084013e610563565b606091505b50509050806105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e90610df6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561071157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c7575b5050505050905060005b815181101561079c57600082828151811061073957610738610c8e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079490610cec565b91505061071b565b50600067ffffffffffffffff8111156107b8576107b7610d35565b5b6040519080825280602002602001820160405280156107e65781602001602082028036833780820191505090505b50600090805190602001906107fc9291906109a9565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161084390610d95565b60006040518083038185875af1925050503d8060008114610880576040519150601f19603f3d011682016040523d82523d6000602084013e610885565b606091505b50509050806108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090610df6565b60405180910390fd5b5050565b6000806108d983610909565b90506000670de0b6b3a764000085836108f29190610e16565b6108fc9190610e9f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095257600080fd5b505afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190610f5d565b5050509150506402540be400816109a19190610fd8565b915050919050565b828054828255906000526020600020908101928215610a22579160200282015b82811115610a215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c9565b5b509050610a2f9190610a33565b5090565b5b80821115610a4c576000816000905550600101610a34565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8082610a55565b9050919050565b610a9081610a75565b8114610a9b57600080fd5b50565b600081359050610aad81610a87565b92915050565b600060208284031215610ac957610ac8610a50565b5b6000610ad784828501610a9e565b91505092915050565b6000819050919050565b610af381610ae0565b82525050565b6000602082019050610b0e6000830184610aea565b92915050565b610b1d81610ae0565b8114610b2857600080fd5b50565b600081359050610b3a81610b14565b92915050565b600060208284031215610b5657610b55610a50565b5b6000610b6484828501610b2b565b91505092915050565b610b7681610a75565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b6000819050919050565b6000610bbc610bb7610bb284610a55565b610b97565b610a55565b9050919050565b6000610bce82610ba1565b9050919050565b6000610be082610bc3565b9050919050565b610bf081610bd5565b82525050565b6000602082019050610c0b6000830184610be7565b92915050565b600082825260208201905092915050565b7f455448206973206e6f7420656e6f756768210000000000000000000000000000600082015250565b6000610c58601283610c11565b9150610c6382610c22565b602082019050919050565b60006020820190508181036000830152610c8781610c4b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf782610ae0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2a57610d29610cbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d7f600083610d64565b9150610d8a82610d6f565b600082019050919050565b6000610da082610d72565b9150819050919050565b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610de0600b83610c11565b9150610deb82610daa565b602082019050919050565b60006020820190508181036000830152610e0f81610dd3565b9050919050565b6000610e2182610ae0565b9150610e2c83610ae0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6557610e64610cbd565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eaa82610ae0565b9150610eb583610ae0565b925082610ec557610ec4610e70565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eef81610ed0565b8114610efa57600080fd5b50565b600081519050610f0c81610ee6565b92915050565b6000819050919050565b610f2581610f12565b8114610f3057600080fd5b50565b600081519050610f4281610f1c565b92915050565b600081519050610f5781610b14565b92915050565b600080600080600060a08688031215610f7957610f78610a50565b5b6000610f8788828901610efd565b9550506020610f9888828901610f33565b9450506040610fa988828901610f48565b9350506060610fba88828901610f48565b9250506080610fcb88828901610efd565b9150509295509295909350565b6000610fe382610f12565b9150610fee83610f12565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102d5761102c610cbd565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106a57611069610cbd565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a7576110a6610cbd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110e4576110e3610cbd565b5b82820290509291505056fea2646970667358221220acfbb504a642e0a7b288ea40150e94a82119d26801da80eb437bd3f07ea4caa664736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    PriceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(PriceFeed, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    PriceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(PriceFeed, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
